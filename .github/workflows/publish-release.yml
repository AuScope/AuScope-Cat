name: Publish Python Package to PyPi

on:
  release:
    types: [published]



jobs:
  pypi-publish:
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
      contents: write
      actions: write

    environment:
      name: pypi

      url: https://pypi.org/project/auscopecat/${{ github.event.release.tag_name }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: main

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        # Install a specific version of uv.
        version: "0.6.3"
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: "Set up Python"
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"

    - name: Read new version number from the tag. expecting the letter 'v' followed by a PEP-440 compliant version number
      env:
        TAG: ${{ github.event.release.tag_name }}
      id: getversionfromtag
      run: echo "VERSION=${TAG#v}" >> $GITHUB_OUTPUT

    - name: check tag name is a valid PEP-440 compliant version number
      run: |
        pip install vercheck
        vercheck ${{ steps.getversionfromtag.outputs.VERSION }} --check-version-number-only

    - name: Write the new version into the project file
      run: |
        sed -i 's/^version =.*/version = "${{ steps.getversionfromtag.outputs.VERSION }}"/' ${{ github.workspace }}/pyproject.toml

    # - name: Check the version was correctly updated in the project file
    #  run: |
    #    vercheck ${{ steps.getversionfromtag.outputs.VERSION }} ${{ github.workspace }}/pyproject.toml

    - name: Commit changes and more tag to after the version change
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        # git tag -d ${{ github.event.release.tag_name }}
        # git push :refs/tags/${{ github.event.release.tag_name }}
        git add ${{ github.workspace }}/pyproject.toml
        git commit -m 'Updated project version to ${{ steps.getversionfromtag.outputs.VERSION }}'
        git push
        # git tag ${{ github.event.release.tag_name }}
        # git push ${{ github.event.release.tag_name }}


    - name: Publish package distributions to PyPI
      run: |
        uv build
        uv publish --trusted-publishing always

    - uses: ammaraskar/sphinx-action@7.1.2
      with:
        docs-folder: "docs/"
    
    - name: Deploy Release Docs
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/build/html
        keep_files: true
